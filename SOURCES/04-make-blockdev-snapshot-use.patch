Make blockdev snapshot use same node name

From: Tim Smith <tim.smith@citrix.com>


---
 block.c               |   41 +++++++++++++++++++++++++++++++++++++++++
 blockdev.c            |   14 ++++++++++++++
 include/block/block.h |    5 +++++
 3 files changed, 60 insertions(+)

diff --git a/block.c b/block.c
index a2caadf0a0..480345bcdc 100644
--- a/block.c
+++ b/block.c
@@ -1109,6 +1109,47 @@ static void update_options_from_flags(QDict *options, int flags)
     }
 }
 
+#ifdef CONFIG_QEMUDP
+void bdrv_replace_node_name(BlockDriverState *bs,
+                                  const char *node_name,
+                                  Error **errp)
+{
+    char *gen_node_name = NULL;
+
+    if (!node_name) {
+        node_name = gen_node_name = id_generate(ID_BLOCK);
+    } else if (!id_wellformed(node_name)) {
+        /*
+         * Check for empty string or invalid characters, but not if it is
+         * generated (generated names use characters not available to the user)
+         */
+        error_setg(errp, "Invalid node name");
+        return;
+    }
+
+    /* takes care of avoiding namespaces collisions */
+    if (blk_by_name(node_name)) {
+        error_setg(errp, "node-name=%s is conflicting with a device id",
+                   node_name);
+        goto out;
+    }
+
+    /* takes care of avoiding duplicates node names */
+    if (bdrv_find_node(node_name)) {
+        error_setg(errp, "Duplicate node name");
+        goto out;
+    }
+
+    /* copy node name into the bs and insert it into the graph list */
+    pstrcpy(bs->node_name, sizeof(bs->node_name), node_name);
+    /* Do *not* insert the bs in the graph_bdrv_states list as this is
+     * for when it is already there. Inserting it again will cause a
+     * use-after-free later */
+out:
+    g_free(gen_node_name);
+}
+#endif
+
 static void bdrv_assign_node_name(BlockDriverState *bs,
                                   const char *node_name,
                                   Error **errp)
diff --git a/blockdev.c b/blockdev.c
index 6f499e835a..c66b62da14 100644
--- a/blockdev.c
+++ b/blockdev.c
@@ -65,6 +65,9 @@
 #include "qemu/cutils.h"
 #include "qemu/help_option.h"
 #include "qemu/throttle-options.h"
+#ifdef CONFIG_QEMUDP
+#include "qemu/id.h"
+#endif
 
 static QTAILQ_HEAD(, BlockDriverState) monitor_bdrv_states =
     QTAILQ_HEAD_INITIALIZER(monitor_bdrv_states);
@@ -1640,6 +1643,9 @@ static void external_snapshot_prepare(BlkActionState *common,
     /* Device and node name of the image to generate the snapshot from */
     const char *device;
     const char *node_name;
+#ifdef CONFIG_QEMUDP
+    char old_node_name[256];
+#endif
     /* Reference to the new image (for 'blockdev-snapshot') */
     const char *snapshot_ref;
     /* File name of the new image (for 'blockdev-snapshot-sync') */
@@ -1761,6 +1767,14 @@ static void external_snapshot_prepare(BlkActionState *common,
 
     state->new_bs = bdrv_open(new_image_file, snapshot_ref, options, flags,
                               errp);
+
+#ifdef CONFIG_QEMUDP
+    /* Make sure the old overlay node_name is transferred to new overlay */
+    pstrcpy(old_node_name, sizeof(state->old_bs->node_name), state->old_bs->node_name);
+    bdrv_replace_node_name(state->old_bs, NULL, NULL);
+    bdrv_replace_node_name(state->new_bs, old_node_name, NULL);
+#endif
+
     /* We will manually add the backing_hd field to the bs later */
     if (!state->new_bs) {
         goto out;
diff --git a/include/block/block.h b/include/block/block.h
index 3cba56e35c..43bb3408e7 100644
--- a/include/block/block.h
+++ b/include/block/block.h
@@ -608,4 +608,9 @@ bool bdrv_can_store_new_dirty_bitmap(BlockDriverState *bs, const char *name,
  */
 void bdrv_register_buf(BlockDriverState *bs, void *host, size_t size);
 void bdrv_unregister_buf(BlockDriverState *bs, void *host);
+#ifdef CONFIG_QEMUDP
+void bdrv_replace_node_name(BlockDriverState *bs,
+                           const char *node_name,
+                           Error **errp);
+#endif
 #endif
