Use libaio by default and O_DIRECT only for write

From: Tim Smith <tim.smith@citrix.com>

Turn off O_DIRECT on read-only files because for our
use case the page cache is likely to be a good thing.

Also allow AIO on non-O_DIRECT because it's probably
OK for us, and set the AIO default to native as we
have no other way to specify it.
---
 block/file-posix.c |   20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/block/file-posix.c b/block/file-posix.c
index 3794c0007a..d511bc54ec 100644
--- a/block/file-posix.c
+++ b/block/file-posix.c
@@ -381,7 +381,9 @@ static void raw_parse_flags(int bdrv_flags, int *open_flags)
     /* Use O_DSYNC for write-through caching, no flags for write-back caching,
      * and O_DIRECT for no caching. */
     if ((bdrv_flags & BDRV_O_NOCACHE)) {
-        *open_flags |= O_DIRECT;
+        if ((bdrv_flags & BDRV_O_RDWR) != 0) {
+            *open_flags |= O_DIRECT;
+        }
     }
 }
 
@@ -448,9 +450,7 @@ static int raw_open_common(BlockDriverState *bs, QDict *options,
         goto fail;
     }
 
-    aio_default = (bdrv_flags & BDRV_O_NATIVE_AIO)
-                  ? BLOCKDEV_AIO_OPTIONS_NATIVE
-                  : BLOCKDEV_AIO_OPTIONS_THREADS;
+    aio_default = BLOCKDEV_AIO_OPTIONS_NATIVE;
     aio = qapi_enum_parse(&BlockdevAioOptions_lookup,
                           qemu_opt_get(opts, "aio"),
                           aio_default, &local_err);
@@ -532,12 +532,12 @@ static int raw_open_common(BlockDriverState *bs, QDict *options,
 
 #ifdef CONFIG_LINUX_AIO
      /* Currently Linux does AIO only for files opened with O_DIRECT */
-    if (s->use_linux_aio && !(s->open_flags & O_DIRECT)) {
-        error_setg(errp, "aio=native was specified, but it requires "
-                         "cache.direct=on, which was not specified.");
-        ret = -EINVAL;
-        goto fail;
-    }
+//     if (s->use_linux_aio && !(s->open_flags & O_DIRECT)) {
+//         error_setg(errp, "aio=native was specified, but it requires "
+//                          "cache.direct=on, which was not specified.");
+//         ret = -EINVAL;
+//         goto fail;
+//     }
 #else
     if (s->use_linux_aio) {
         error_setg(errp, "aio=native was specified, but is not supported "
