Added xen-watch-domain qmp command

From: Tim Smith <tim.smith@citrix.com>

Can be used at runtime instead of -xen-domid N on the command-line.
This doesn't affect the global xen_domid.
---
 Makefile                    |   10 +++++++++
 dp-qapi/dp-qapi-schema.json |    1 +
 dp-qapi/xen.json            |   19 +++++++++++++++++
 hw/block/xen_disk.c         |   14 ++++++++++++-
 hw/xen/xen_backend.c        |   47 ++++++++++++++++++++++++++++++++++++++++++-
 include/hw/xen/xen_pvdev.h  |    3 +++
 6 files changed, 92 insertions(+), 2 deletions(-)
 create mode 100644 dp-qapi/xen.json

diff --git a/Makefile b/Makefile
index 116ebba9a4..ea4fc3291b 100644
--- a/Makefile
+++ b/Makefile
@@ -201,6 +201,7 @@ GENERATED_FILES += dp-qapi/qapi-commands-introspect.c dp-qapi/qapi-commands-intr
 GENERATED_FILES += dp-qapi/qapi-commands-misc.c dp-qapi/qapi-commands-misc.h
 GENERATED_FILES += dp-qapi/qapi-commands-sockets.c dp-qapi/qapi-commands-sockets.h
 GENERATED_FILES += dp-qapi/qapi-commands-transaction.c dp-qapi/qapi-commands-transaction.h
+GENERATED_FILES += dp-qapi/qapi-commands-xen.c dp-qapi/qapi-commands-xen.h
 GENERATED_FILES += dp-qapi/qapi-events-block.c dp-qapi/qapi-events-block-core.h
 GENERATED_FILES += dp-qapi/qapi-events-block-core.c dp-qapi/qapi-events-block.h
 GENERATED_FILES += dp-qapi/qapi-events.c dp-qapi/qapi-events-char.h
@@ -211,6 +212,7 @@ GENERATED_FILES += dp-qapi/qapi-events-introspect.c dp-qapi/qapi-events-introspe
 GENERATED_FILES += dp-qapi/qapi-events-misc.c dp-qapi/qapi-events-misc.h
 GENERATED_FILES += dp-qapi/qapi-events-sockets.c dp-qapi/qapi-events-sockets.h
 GENERATED_FILES += dp-qapi/qapi-events-transaction.c dp-qapi/qapi-events-transaction.h
+GENERATED_FILES += dp-qapi/qapi-events-xen.c dp-qapi/qapi-events-xen.h
 GENERATED_FILES += dp-qapi/qapi-introspect.c dp-qapi/qapi-introspect.h
 GENERATED_FILES += dp-qapi/qapi-types-block.c dp-qapi/qapi-types-block-core.h
 GENERATED_FILES += dp-qapi/qapi-types-block-core.c dp-qapi/qapi-types-block.h
@@ -222,6 +224,7 @@ GENERATED_FILES += dp-qapi/qapi-types-introspect.c dp-qapi/qapi-types-introspect
 GENERATED_FILES += dp-qapi/qapi-types-misc.c dp-qapi/qapi-types-misc.h
 GENERATED_FILES += dp-qapi/qapi-types-sockets.c dp-qapi/qapi-types-sockets.h
 GENERATED_FILES += dp-qapi/qapi-types-transaction.c dp-qapi/qapi-types-transaction.h
+GENERATED_FILES += dp-qapi/qapi-types-xen.c dp-qapi/qapi-types-xen.h
 GENERATED_FILES += dp-qapi/qapi-visit-block.c dp-qapi/qapi-visit-block-core.h
 GENERATED_FILES += dp-qapi/qapi-visit-block-core.c dp-qapi/qapi-visit-block.h
 GENERATED_FILES += dp-qapi/qapi-visit.c dp-qapi/qapi-visit-char.h
@@ -232,6 +235,7 @@ GENERATED_FILES += dp-qapi/qapi-visit-introspect.c dp-qapi/qapi-visit-introspect
 GENERATED_FILES += dp-qapi/qapi-visit-misc.c dp-qapi/qapi-visit-misc.h
 GENERATED_FILES += dp-qapi/qapi-visit-sockets.c dp-qapi/qapi-visit-sockets.h
 GENERATED_FILES += dp-qapi/qapi-visit-transaction.c dp-qapi/qapi-visit-transaction.h
+GENERATED_FILES += dp-qapi/qapi-visit-xen.c dp-qapi/qapi-visit-xen.h
 GENERATED_FILES += dp-qapi/qapi-doc.texi
 
 GENERATED_FILES += $(TRACE_HEADERS)
@@ -593,6 +597,7 @@ libqemuchardev.a: $(chardev-obj-y)
 
 libqemudpqapi.a: dp-qapi/qapi-commands.o dp-qapi/qapi-commands-misc.o dp-qapi/qapi-commands-block-core.o \
 	dp-qapi/qapi-commands-block.o dp-qapi/qapi-commands-char.o dp-qapi/qapi-commands-transaction.o \
+	dp-qapi/qapi-commands-xen.o \
 	dp-qapi/qapi-types-block-core.o dp-qapi/qapi-visit-block-core.o dp-qapi/qapi-events-block-core.o \
 	dp-qapi/qapi-types-transaction.o dp-qapi/qapi-visit-transaction.o \
 	dp-qapi/qapi-types-crypto.o dp-qapi/qapi-visit-crypto.o \
@@ -600,6 +605,7 @@ libqemudpqapi.a: dp-qapi/qapi-commands.o dp-qapi/qapi-commands-misc.o dp-qapi/qa
 	dp-qapi/qapi-types-block.o dp-qapi/qapi-visit-block.o dp-qapi/qapi-events-block.o \
 	dp-qapi/qapi-types-char.o dp-qapi/qapi-visit-char.o \
 	dp-qapi/qapi-types-sockets.o dp-qapi/qapi-visit-sockets.o \
+	dp-qapi/qapi-types-xen.o dp-qapi/qapi-visit-xen.o dp-qapi/qapi-events-xen.o \
 	dp-qapi/qapi-types-misc.o dp-qapi/qapi-visit-misc.o dp-qapi/qapi-events-misc.o \
 	dp-qapi/qapi-builtin-types.o dp-qapi/qapi-builtin-visit.o \
 
@@ -704,6 +710,7 @@ dp-qapi/qapi-commands-introspect.c dp-qapi/qapi-commands-introspect.h \
 dp-qapi/qapi-commands-misc.c dp-qapi/qapi-commands-misc.h \
 dp-qapi/qapi-commands-sockets.c dp-qapi/qapi-commands-sockets.h \
 dp-qapi/qapi-commands-transaction.c dp-qapi/qapi-commands-transaction.h \
+dp-qapi/qapi-commands-xen.c dp-qapi/qapi-commands-xen.h \
 dp-qapi/qapi-events-block.c dp-qapi/qapi-events-block-core.h \
 dp-qapi/qapi-events-block-core.c dp-qapi/qapi-events-block.h \
 dp-qapi/qapi-events.c dp-qapi/qapi-events-char.h \
@@ -714,6 +721,7 @@ dp-qapi/qapi-events-introspect.c dp-qapi/qapi-events-introspect.h \
 dp-qapi/qapi-events-misc.c dp-qapi/qapi-events-misc.h \
 dp-qapi/qapi-events-sockets.c dp-qapi/qapi-events-sockets.h \
 dp-qapi/qapi-events-transaction.c dp-qapi/qapi-events-transaction.h \
+dp-qapi/qapi-events-xen.c dp-qapi/qapi-events-xen.h \
 dp-qapi/qapi-introspect.c dp-qapi/qapi-introspect.h \
 dp-qapi/qapi-types-block.c dp-qapi/qapi-types-block-core.h \
 dp-qapi/qapi-types-block-core.c dp-qapi/qapi-types-block.h \
@@ -725,6 +733,7 @@ dp-qapi/qapi-types-introspect.c dp-qapi/qapi-types-introspect.h \
 dp-qapi/qapi-types-misc.c dp-qapi/qapi-types-misc.h \
 dp-qapi/qapi-types-sockets.c dp-qapi/qapi-types-sockets.h \
 dp-qapi/qapi-types-transaction.c dp-qapi/qapi-types-transaction.h \
+dp-qapi/qapi-types-xen.c dp-qapi/qapi-types-xen.h \
 dp-qapi/qapi-visit-block.c dp-qapi/qapi-visit-block-core.h \
 dp-qapi/qapi-visit-block-core.c dp-qapi/qapi-visit-block.h \
 dp-qapi/qapi-visit.c dp-qapi/qapi-visit-char.h \
@@ -735,6 +744,7 @@ dp-qapi/qapi-visit-introspect.c dp-qapi/qapi-visit-introspect.h \
 dp-qapi/qapi-visit-misc.c dp-qapi/qapi-visit-misc.h \
 dp-qapi/qapi-visit-sockets.c dp-qapi/qapi-visit-sockets.h \
 dp-qapi/qapi-visit-transaction.c dp-qapi/qapi-visit-transaction.h \
+dp-qapi/qapi-visit-xen.c dp-qapi/qapi-visit-xen.h \
 dp-qapi/qapi-doc.texi: dp-qapi-gen-timestamp ;
 dp-qapi-gen-timestamp: $(dp-qapi-modules) $(qapi-py)
 	$(call quiet-command,$(PYTHON_UTF8) $(SRC_PATH)/scripts/qapi-gen.py \
diff --git a/dp-qapi/dp-qapi-schema.json b/dp-qapi/dp-qapi-schema.json
index c80762f3d5..9e204a45f5 100644
--- a/dp-qapi/dp-qapi-schema.json
+++ b/dp-qapi/dp-qapi-schema.json
@@ -82,6 +82,7 @@
 { 'include': 'sockets.json' }
 { 'include': 'crypto.json' }
 { 'include': 'block.json' }
+{ 'include': 'xen.json' }
 { 'include': 'char.json' }
 { 'include': 'transaction.json' }
 { 'include': 'introspect.json' }
diff --git a/dp-qapi/xen.json b/dp-qapi/xen.json
new file mode 100644
index 0000000000..5d4e081548
--- /dev/null
+++ b/dp-qapi/xen.json
@@ -0,0 +1,19 @@
+##
+# @xen-watch-device:
+#
+# Add XenWD device
+#
+# @domid: xen domain id
+#
+# @devid: xen disk device id
+#
+# @type: device type
+#
+# @blocknode: blocknode
+#
+# @devicename: node_name to attch
+#
+# Since: 2.10
+##
+{ 'command': 'xen-watch-device',
+  'data': { 'domid': 'int', 'devid': 'int', 'type': 'str', 'blocknode': 'str', 'devicename': 'str' } }
diff --git a/hw/block/xen_disk.c b/hw/block/xen_disk.c
index f74fcd42d1..873a1d7a84 100644
--- a/hw/block/xen_disk.c
+++ b/hw/block/xen_disk.c
@@ -96,6 +96,8 @@ struct XenBlkDev {
     bool                directiosafe;
     const char          *fileproto;
     const char          *filename;
+    const char          *devicename;
+    const char          *nodename;
     unsigned int        ring_ref[1 << MAX_RING_PAGE_ORDER];
     unsigned int        nr_ring_ref;
     void                *sring;
@@ -991,6 +993,12 @@ static int blk_init(struct XenDevice *xendev)
             blkdev->filename  = blkdev->params;
         }
     }
+    if (xendev->blocknode) {
+        /* override "params" */
+        blkdev->devicename = xendev->devicename;
+        blkdev->nodename = xendev->blocknode;
+        blkdev->filename = NULL;
+    }
     if (!strcmp("aio", blkdev->fileproto)) {
         blkdev->fileproto = "raw";
     }
@@ -1115,10 +1123,14 @@ static int blk_connect(struct XenDevice *xendev)
             options = qdict_new();
             qdict_put_str(options, "driver", blkdev->fileproto);
         }
+        if (blkdev->nodename) {
+            xen_pv_printf(&blkdev->xendev, 2, "looking up blockdev node %s\n", blkdev->nodename);
+            options = NULL;
+        }
 
         /* setup via xenbus -> create new block driver instance */
         xen_pv_printf(&blkdev->xendev, 2, "create new bdrv (xenbus setup)\n");
-        blkdev->blk = blk_new_open(blkdev->filename, NULL, options,
+        blkdev->blk = blk_new_open(blkdev->filename, blkdev->nodename, options,
                                    qflags, &local_err);
         if (!blkdev->blk) {
             xen_pv_printf(&blkdev->xendev, 0, "error: %s\n",
diff --git a/hw/xen/xen_backend.c b/hw/xen/xen_backend.c
index dec43da147..3a5a2a2069 100644
--- a/hw/xen/xen_backend.c
+++ b/hw/xen/xen_backend.c
@@ -33,6 +33,9 @@
 #include "hw/xen/xen_backend.h"
 #include "hw/xen/xen_pvdev.h"
 #include "monitor/qdev.h"
+#ifdef CONFIG_QEMUDP
+#include "dp-qapi/qapi-commands-xen.h"
+#endif
 
 #include <xen/grant_table.h>
 
@@ -106,6 +109,18 @@ int xen_be_set_state(struct XenDevice *xendev, enum xenbus_state state)
     return 0;
 }
 
+/*
+ * free a XenDevice, now that we have some extra stuff in it we can't
+ * just use g_free() or it will leak
+ */
+static void xendevice_free(void *ptr)
+{
+    struct XenDevice *xendev = (struct XenDevice *)ptr;
+    g_free(xendev->blocknode);
+    g_free(xendev->devicename);
+    g_free(xendev);
+}
+
 /*
  * get xen backend device, allocate a new one if it doesn't exist.
  */
@@ -122,7 +137,7 @@ static struct XenDevice *xen_be_get_xendev(const char *type, int dom, int dev,
     /* init new xendev */
     xendev = g_malloc0(ops->size);
     object_initialize(&xendev->qdev, ops->size, TYPE_XENBACKEND);
-    OBJECT(xendev)->free = g_free;
+    OBJECT(xendev)->free = xendevice_free;
 #ifndef CONFIG_QEMUDP
     qdev_set_parent_bus(DEVICE(xendev), xen_sysbus);
 #endif
@@ -697,6 +712,7 @@ static const TypeInfo xensysdev_info = {
     .class_init    = xen_sysdev_class_init,
 };
 
+
 static void xenbe_register_types(void)
 {
     type_register_static(&xensysbus_info);
@@ -704,4 +720,33 @@ static void xenbe_register_types(void)
     type_register_static(&xendev_type_info);
 }
 
+#ifdef CONFIG_QEMUDP
+void qmp_xen_watch_device(int64_t domid, int64_t devid, const char *type, const char *blocknode, const char *devicename, Error **errp)
+{
+    struct XenDevice *xendev = NULL;
+
+    if (strcmp(type, "qdisk")) {
+        error_set(errp, ERROR_CLASS_DEVICE_NOT_FOUND,
+                  "Device type '%s' not supported", type);
+        return;
+    }
+    /* Important! The "type" argument must be a pointer to a static string
+     * because everything else assumes it will be. The pointer gets stored
+     * when xen_be_get_xendev() auto-creates the structure.
+     *
+     * Hence we check the argument matches "qdisk" above but we never use it
+     * otherwise.
+     */
+    xendev = xen_be_get_xendev("qdisk", domid, devid, &xen_blkdev_ops);
+    if (xendev == NULL) {
+        error_set(errp, ERROR_CLASS_DEVICE_NOT_FOUND,
+                  "Device type '%s-%ld' not found in domain %ld", "qdisk", devid, domid);
+        return;
+    }
+    xendev->blocknode = g_strdup(blocknode);
+    xendev->devicename = g_strdup(devicename);
+    xen_be_check_state(xendev);
+}
+#endif
+
 type_init(xenbe_register_types)
diff --git a/include/hw/xen/xen_pvdev.h b/include/hw/xen/xen_pvdev.h
index d473e9b34d..5a703be519 100644
--- a/include/hw/xen/xen_pvdev.h
+++ b/include/hw/xen/xen_pvdev.h
@@ -36,6 +36,9 @@ struct XenDevice {
     char               name[64];
     int                debug;
 
+    char*              blocknode;
+    char*              devicename;
+
     enum xenbus_state  be_state;
     enum xenbus_state  fe_state;
     int                online;
